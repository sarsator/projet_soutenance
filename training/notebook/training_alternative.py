
import tensorflow as tf
import tensorflow_hub as hub
import numpy as np
import os
import json
import cv2
from pathlib import Path
import pandas as pd

print("üöÄ D√©marrage de l\'entra√Ænement SSD MobileNet V3 personnalis√©...")

# Configuration
IMG_SIZE = 512
BATCH_SIZE = 16
EPOCHS = 50
NUM_CLASSES = 2

# Chargement du mod√®le pr√©-entra√Æn√© MobileNet V3
print("üì• Chargement du mod√®le de base MobileNet V3...")
base_model = tf.keras.applications.MobileNetV3Small(
    input_shape=(IMG_SIZE, IMG_SIZE, 3),
    include_top=False,
    weights='imagenet'
)

# Construction du mod√®le de d√©tection
print("üèóÔ∏è  Construction du mod√®le de d√©tection...")
base_model.trainable = True

# Ajout des couches de d√©tection
global_average_layer = tf.keras.layers.GlobalAveragePooling2D()
prediction_layer = tf.keras.layers.Dense(NUM_CLASSES, activation='softmax')

model = tf.keras.Sequential([
    base_model,
    global_average_layer,
    prediction_layer
])

# Compilation
model.compile(
    optimizer=tf.keras.optimizers.Adam(learning_rate=0.001),
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy']
)

print("‚úÖ Mod√®le cr√©√© et compil√©")
print(f"üìä Param√®tres: {model.count_params():,}")

# Fonction de preprocessing des donn√©es
def load_and_preprocess_data():
    """Charge et pr√©processe les donn√©es d\'entra√Ænement"""
    # Ici vous pouvez impl√©menter le chargement de vos TFRecords
    # ou utiliser un g√©n√©rateur de donn√©es personnalis√©
    print("üìÇ Fonction de chargement des donn√©es pr√™te")
    return None, None

# Configuration des callbacks
callbacks = [
    tf.keras.callbacks.EarlyStopping(patience=10, restore_best_weights=True),
    tf.keras.callbacks.ReduceLROnPlateau(factor=0.5, patience=5),
    tf.keras.callbacks.ModelCheckpoint(
        'best_model.h5',
        save_best_only=True,
        monitor='val_accuracy'
    ),
    tf.keras.callbacks.TensorBoard(log_dir='logs')
]

print("‚ö†Ô∏è  Pour entra√Æner le mod√®le, vous devez:")
print("1. Impl√©menter le g√©n√©rateur de donn√©es √† partir des TFRecords")
print("2. Adapter le mod√®le pour la d√©tection d\'objets (au lieu de classification)")
print("3. Utiliser model.fit() avec vos donn√©es")

print("üí° Alternative recommand√©e: Utiliser YOLOv5/YOLOv8 qui est plus simple √† configurer")
